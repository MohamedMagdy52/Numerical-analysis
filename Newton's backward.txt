import numpy as np
import pandas as pd
from sympy import *

choice = int(input("press 1 to get the polynomial\npress 2 to enter a value for x\npress 3 to enter a value for y: "))
n = int(input('Enter number of data points: '))

dt = np.zeros((n,n+1))    #rows,columns


# input
print('Enter data for x and y: \n')
if choice==3:
  for i in range(n):
    dt[i][1] = float(input(f"Enter x[{i}]: "))
    dt[i][0] = float(input(f"Enter y[{i}]: "))
else:
  for i in range(n):
    dt[i][0] = float(input(f"Enter x[{i}]: "))
    dt[i][1] = float(input(f"Enter y[{i}]: "))

# Generating difference table
for i in range(n-1):        #i-> coumns, j->rows
    for j in range(n-1-i):    
      dt[j][i+2] = (dt[j+1][i+1] - dt[j][i+1])/(dt[j+i+1][0]-dt[j][0])
df = pd.DataFrame(dt)


#replace the zeros with white spaces
print("\nThe difference table: \n")
for i in range(n,1,-1):
  for j in range(n-1,n-i,-1):
    df[i][j] = " "

#assign column names
column_names = ['x', 'y']
for i in range(1,n):
  column_names.append(f'\u0394{i}')
df.columns = column_names

#printing the dataframe
print(df,'\n')

#get back columns to number index 
df.columns = [i for i in range(n+1)]

#newton backward method:
x = symbols('x')
p = df[1][n-1]     #column,row
for i in range(2,n+1):
  t = 1-x+x
  for j in range(i-1):
    t = t * (x-df[0][n-1-j])

  p = p + t*df[i][n-i]
  #print(n-i+1,'\n')

ans = poly(p).expr


if choice==1:
  print(f"\nNewton's forward polynomial: {ans}")

elif (choice==2):
  a = float(input("Enter value for x: "))
  ans = ans.subs(x,a)
  print(f"y = {ans:.6f}")

elif (choice==3):
  a = float(input("Enter value for y: "))
  ans = ans.subs(x,a)
  print(f"x = {ans:.6f}")